@page "/"
@inject HttpClient HttpClient

<div class="row mt-4">
    @foreach (var product in products)
    {
        <div class="col-md-4">
            <div class="card mb-4 shadow-sm">
                <img class="bd-placeholder-img card-img-top" src="https://localhost:44349/@product.ThumbnailImageUrl" />
                <div class="card-body">
                    <p class="card-text">@product.Name</p>
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="btn-group">
                            <button type="button" class="btn btn-sm btn-outline-secondary">View</button>
                            <button type="button" class="btn btn-sm btn-outline-secondary">Edit</button>
                        </div>
                        <small class="text-muted">9 mins</small>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {

    IList<ProductVm> products = new List<ProductVm>();

    [CascadingParameter] Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateTask;
        if (authState.User.Identity.IsAuthenticated)
        {
            var accessToken = authState.User.Claims.FirstOrDefault(c => c.Type == "access_token")?.Value;
            HttpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", accessToken);
        }

        products = await HttpClient.GetJsonAsync<IList<ProductVm>>("https://localhost:44349/api/products");
    }
}
